// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://shared_api_user:YKIQz5Gya0w4SexkkfKs2UaEB0OPOPjV@dpg-crosbgjqf0us73c48d2g-a.oregon-postgres.render.com/shared_api"
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  cpf          String         @unique
  password     String
  phone        String         @unique
  refreshToken RefreshToken[]
  createdAt    DateTime       @default(now())
  Candidate    Candidate[]
  Militant     Militant[]

  @@map("users")
}

model Post {
  id          Int          @id @default(autoincrement())
  filename    String
  fileType    String
  title       String?
  description String?
  createdAt   DateTime     @default(now())
  candidate   Candidate    @relation(fields: [candidateId], references: [id])
  candidateId Int
  SharedPost  SharedPost[]

  @@map("posts")
}

model Candidate {
  id              Int        @id @default(autoincrement())
  nameCandidate   String
  numberCandidate String     @unique
  avatarCandidate String
  user            User       @relation(fields: [userId], references: [id])
  userId          Int
  Militant        Militant[]
  Post            Post[]
  createdAt       DateTime   @default(now())

  @@map("candidates")
}

model Militant {
  id           Int            @id @default(autoincrement())
  name         String
  codeAccess   String         @unique
  phone        String         @unique
  refreshToken RefreshToken[]
  candidate    Candidate      @relation(fields: [candidateId], references: [id])
  candidateId  Int
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime       @default(now())
  SharedPost   SharedPost[]

  @@map("militants")
}

model SharedPost {
  id         Int      @id @default(autoincrement())
  militant   Militant @relation(fields: [militantId], references: [id])
  militantId Int
  createdAt  DateTime @default(now())
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int

  @@map("sharedPosts")
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  expiresIn  Int
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  Militant   Militant? @relation(fields: [militantId], references: [id])
  militantId Int?

  @@map("refresh_token")
}
